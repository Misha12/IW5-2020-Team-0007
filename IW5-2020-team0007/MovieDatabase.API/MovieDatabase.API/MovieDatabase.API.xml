<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MovieDatabase.API</name>
    </assembly>
    <members>
        <member name="M:MovieDatabase.API.Controllers.GenresController.GetGenreList(System.String)">
            <summary>
            Get dictionary of all genres.
            </summary>
            <param name="search">Optional argument for filter with name of genre.</param>
        </member>
        <member name="M:MovieDatabase.API.Controllers.GenresController.GetGenreByID(System.Int32)">
            <summary>
            Get genre by ID.
            </summary>
            <param name="id">Unique ID of genre.</param>
        </member>
        <member name="M:MovieDatabase.API.Controllers.GenresController.CreateGenre(MovieDatabase.API.Models.GenreInput)">
            <summary>
            Create genre.
            </summary>
        </member>
        <member name="M:MovieDatabase.API.Controllers.GenresController.UpdateGenre(System.Int32,MovieDatabase.API.Models.GenreInput)">
            <summary>
            Update of genre.
            </summary>
            <param name="id">Unique ID of genre.</param>
            <param name="data"></param>
        </member>
        <member name="M:MovieDatabase.API.Controllers.GenresController.DeleteGenre(System.Int32)">
            <summary>
            Delete genre.
            </summary>
            <param name="id">Unique ID of genre</param>
        </member>
        <member name="M:MovieDatabase.API.Controllers.MoviesController.GetMovies(System.String,System.Int32[],System.Nullable{System.Int64},System.Nullable{System.Int64},System.String[])">
            <summary>
            Get dictionary od all movies.
            </summary>
            <param name="searchName">Optional parametr for movie name.</param>
            <param name="genres">Collection of movies IDs.</param>
            <param name="lengthFrom">Minimal lenght</param>
            <param name="lengthTo">Maximal lenght</param>
            <param name="countries">Collection of countries.</param>
        </member>
        <member name="M:MovieDatabase.API.Controllers.MoviesController.GetMovieByID(System.Int64)">
            <summary>
            Get all information about movie.
            </summary>
            <param name="id">Unique ID of movie.</param>
        </member>
        <member name="M:MovieDatabase.API.Controllers.MoviesController.CreateMovie(MovieDatabase.API.Models.MovieInput)">
            <summary>
            Create movie.
            </summary>
        </member>
        <member name="M:MovieDatabase.API.Controllers.MoviesController.DeleteMovie(System.Int64)">
            <summary>
            Delete movie.
            </summary>
            <param name="id">Unique ID of movie.</param>
        </member>
        <member name="M:MovieDatabase.API.Controllers.MoviesController.UpdateMovie(System.Int64,MovieDatabase.API.Models.MovieInput)">
            <summary>
            Update of movie.
            </summary>
            <param name="id">Unique ID of movie.</param>
            <param name="data"></param>
        </member>
        <member name="M:MovieDatabase.API.Controllers.PersonsController.GetPersons(System.String)">
            <summary>
            Get collection of all persons.
            </summary>
            <param name="search">Optional parametr for movie name and surname.</param>
        </member>
        <member name="M:MovieDatabase.API.Controllers.PersonsController.GetPersonByID(System.Int64)">
            <summary>
            Get all information about person.
            </summary>
            <param name="id">Unique ID of person.</param>
        </member>
        <member name="M:MovieDatabase.API.Controllers.PersonsController.CreatePerson(MovieDatabase.API.Models.PersonInput)">
            <summary>
            Create person.
            </summary>
        </member>
        <member name="M:MovieDatabase.API.Controllers.PersonsController.DeletePerson(System.Int64)">
            <summary>
            Delete person.
            </summary>
            <param name="id">Unique ID of person.</param>
            <remarks>Warning. Peson will be deleted from all movies on which he/she participated.</remarks>
        </member>
        <member name="M:MovieDatabase.API.Controllers.PersonsController.UpdatePerson(System.Int64,MovieDatabase.API.Models.PersonInput)">
            <summary>
            Update of person.
            </summary>
            <param name="id">Unique ID of person.</param>
            <param name="data"></param>
        </member>
        <member name="M:MovieDatabase.API.Controllers.RatesController.GetMovieRates(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all rates for movie.
            </summary>
            <param name="movieID">Unique ID of movie.</param>
            <param name="scoreFrom">Optional parametr for minimal rate.</param>
            <param name="scoreTo">Optional parametr for maximal rate.</param>
        </member>
        <member name="M:MovieDatabase.API.Controllers.RatesController.GetMovieRateByRateID(System.Int64,System.Int64)">
            <summary>
            Get rate with information about movie.
            </summary>
            <param name="movieID">Unique ID of movie.</param>
            <param name="rateID">Unique ID of rate.</param>
            <returns></returns>
        </member>
        <member name="M:MovieDatabase.API.Controllers.RatesController.CreateMovieRate(System.Int64,MovieDatabase.API.Models.RateInput)">
            <summary>
            Create rate.
            </summary>
            <param name="movieID">Unique ID of movie.</param>
            <param name="data"></param>
        </member>
        <member name="M:MovieDatabase.API.Controllers.RatesController.UpdateMovieRate(System.Int64,System.Int64,MovieDatabase.API.Models.RateInput)">
            <summary>
            Change rate.
            </summary>
            <param name="movieID">Unique ID of movie.</param>
            <param name="rateID">Unique ID of rate.</param>
            <param name="data"></param>
        </member>
        <member name="M:MovieDatabase.API.Controllers.RatesController.DeleteMovieName(System.Int64,System.Int64)">
            <summary>
            Delete rate.
            </summary>
            <param name="movieID">Unique ID of movie.</param>
            <param name="rateID">Unique ID of rate.</param>
        </member>
        <member name="M:MovieDatabase.API.Controllers.RatesController.GetAllRates(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all rates fo all movies.
            </summary>
            <returns></returns>
        </member>
        <member name="P:MovieDatabase.API.Models.GenreInput.Name">
            <summary>
            Name of genre.
            </summary>
        </member>
        <member name="P:MovieDatabase.API.Models.MovieInput.OriginalName">
            <summary>
            Movie name.
            </summary>
        </member>
        <member name="P:MovieDatabase.API.Models.MovieInput.Genre">
            <summary>
            Genre ID.
            </summary>
        </member>
        <member name="P:MovieDatabase.API.Models.MovieInput.Length">
            <summary>
            Movie lengh.
            </summary>
        </member>
        <member name="P:MovieDatabase.API.Models.MovieInput.Country">
            <summary>
            Country of origins.
            </summary>
        </member>
        <member name="P:MovieDatabase.API.Models.MovieInput.Description">
            <summary>
            Description of movie.
            </summary>
        </member>
        <member name="P:MovieDatabase.API.Models.MovieInput.TitleImageUrl">
            <summary>
            URL link for title image.
            </summary>
        </member>
        <member name="P:MovieDatabase.API.Models.MovieInput.Names">
            <summary>
            Translation for movie names .
            </summary>
        </member>
        <member name="P:MovieDatabase.API.Models.MovieInput.Actors">
            <summary>
            Collection of actros IDs in movie.
            </summary>
        </member>
        <member name="P:MovieDatabase.API.Models.MovieInput.Directors">
            <summary>
            Collection of directors IDs in movie.
            </summary>
        </member>
    </members>
</doc>
